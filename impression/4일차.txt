<4일차>
소요시간 : 2시간 30분

진행 : 기능 요구사항 5,6

느낀점
- 6번 기능 요구사항을 해결하는 데에 시간이 많이 소요되었다.
- 아직까지 문자열과 관련된 기능들을 구현하는데에 있어 어려움을 느꼈고, 이는 더 보완해야겠다는 생각이 들었다.
- 코드를 메서드로 나누었어도 if문이 많이 들어간 5번 같은 경우 이게 최선일까하는 생각이 들었다.

- 기능 요구사항 5번 같은 경우 돈을 각각 요구조건에 맞게 분리하는 문제로 파악하였다.
- 주어진 모든 지폐의 개수를 리스트에 저장해 놓은 후 조건에 맞을 경우 그 수만큼 증가시켜 답을 도출했다.
- 지폐의 종류가 9가지였기 때문에 조건 또한 9개를 걸어 놓음으로써 코드가 굉장히 길고 더 괜찮은 코드는 없을까 하는 생각을 구현 중에 계속했다.
- 난이도는 평이했으며 코드가 길어지는 것이 문제였고 혹시 다른 풀이가 있고 확인할 수 있다면 큰 도움이 될 것 같다.

- 기능 요구사항 5번 같은 경우 문자열을 조건에 맞게 구성한 후 중복 검사를 하는 문제였다.
- 어찌보면 나의 풀이는 문자열에서 나올 수 있는 조합들을 다 구한 후 일일히 다 확인하는 풀이였다.
- 그래서 시간복잡도 측면에서 생각을 하게 되었다.
- 일단 문자열의 길이는 20자 미만으로써 총 나올 수 있는 조합은 18이였다.
- 크루원들은 10000명으로써 이중 for문을 돌며 확인하기 때문에 O(N) 측면에서 1억이라는 값이 나왔다.
- 시간복잡도 측면에서 굉장히 나쁘다는 것을 깨달았고 더 좋은 풀이가 있을 것이라 생각했다.
- 생각해낸 것은 방문처리를 통하여 이미 중복이라고 판단된 닉네임을 건너뛰고 계산하는 것이었다.

- 역시나 전체적으로 최대한 기능별로 메서드를 나누고 메서드 하나에 한 기능만 동작하도록 설계하려고 노력했다.
- depth를 2로 맞추려고 했지만 마땅한 메서드를 추가하기가 번거로웠고, 또 추가하자니 코드의 가독성이 떨어지는 것 같아 depth 3으로 요구사항을 해결하였다.
- 아직 객체지향적 설계 및 요구사항을 완벽하게 수행해내기에 실력이 부족하다라는 것을 느꼈다.